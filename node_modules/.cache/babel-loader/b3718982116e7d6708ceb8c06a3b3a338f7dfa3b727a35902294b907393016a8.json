{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dell\\\\OneDrive\\\\Bureau\\\\elby-portfolio\\\\src\\\\components\\\\Experience.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useContext } from 'react';\nimport { Timeline, TimelineItem } from 'vertical-timeline-component-for-react';\nimport { Container } from 'react-bootstrap';\nimport ReactMarkdown from 'react-markdown';\nimport PropTypes from 'prop-types';\nimport { ThemeContext } from 'styled-components';\nimport Fade from 'react-reveal';\nimport Header from './Header';\nimport endpoints from '../constants/endpoints';\nimport FallbackSpinner from './FallbackSpinner';\nimport '../css/experience.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst styles = {\n  ulStyle: {\n    listStylePosition: 'outside',\n    paddingLeft: 20\n  },\n  subtitleContainerStyle: {\n    marginTop: 10,\n    marginBottom: 10\n  },\n  subtitleStyle: {\n    display: 'inline-block'\n  },\n  inlineChild: {\n    display: 'inline-block'\n  },\n  itemStyle: {\n    marginBottom: 10\n  }\n};\nfunction Experience(props) {\n  _s();\n  const newLocal = useContext(ThemeContext);\n  const theme = newLocal;\n  const {\n    header\n  } = props;\n  const [data, setData] = useState(null);\n  useEffect(() => {\n    fetch(endpoints.experiences, {\n      method: 'GET'\n    }).then(res => res.json()).then(res => setData(res.experiences)).catch(err => err);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      title: header\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), data ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"section-content-container\",\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        children: /*#__PURE__*/_jsxDEV(Timeline, {\n          lineColor: theme.timelineLineColor,\n          children: data.map(item => /*#__PURE__*/_jsxDEV(Fade, {\n            children: /*#__PURE__*/_jsxDEV(TimelineItem, {\n              dateText: item.dateText,\n              dateInnerStyle: {\n                background: theme.accentColor\n              },\n              style: styles.itemStyle,\n              bodyContainerStyle: {\n                color: theme.color\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                className: \"item-title\",\n                children: item.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 68,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                style: styles.subtitleContainerStyle,\n                children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                  style: {\n                    ...styles.subtitleStyle,\n                    color: theme.accentColor\n                  },\n                  children: item.subtitle\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 72,\n                  columnNumber: 25\n                }, this), item.workType && /*#__PURE__*/_jsxDEV(\"h5\", {\n                  style: styles.inlineChild,\n                  children: [\"\\xA0\\xB7\", ' ', item.workType]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 76,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 71,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n                style: styles.ulStyle,\n                children: item.workDescription.map(point => /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"li\", {\n                    children: /*#__PURE__*/_jsxDEV(ReactMarkdown, {\n                      children: point,\n                      components: {\n                        p: 'span'\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 87,\n                      columnNumber: 31\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 86,\n                    columnNumber: 29\n                  }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 94,\n                    columnNumber: 29\n                  }, this)]\n                }, point, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 85,\n                  columnNumber: 27\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 83,\n                columnNumber: 23\n              }, this)]\n            }, item.title + item.dateText, true, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 11\n    }, this) : /*#__PURE__*/_jsxDEV(FallbackSpinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n_s(Experience, \"9oIXGOlG1jdPjdA+F4ySPp/0mxs=\");\n_c = Experience;\nExperience.propTypes = {\n  header: PropTypes.string.isRequired\n};\nexport default Experience;\nvar _c;\n$RefreshReg$(_c, \"Experience\");","map":{"version":3,"names":["React","useEffect","useState","useContext","Timeline","TimelineItem","Container","ReactMarkdown","PropTypes","ThemeContext","Fade","Header","endpoints","FallbackSpinner","jsxDEV","_jsxDEV","Fragment","_Fragment","styles","ulStyle","listStylePosition","paddingLeft","subtitleContainerStyle","marginTop","marginBottom","subtitleStyle","display","inlineChild","itemStyle","Experience","props","_s","newLocal","theme","header","data","setData","fetch","experiences","method","then","res","json","catch","err","children","title","fileName","_jsxFileName","lineNumber","columnNumber","className","lineColor","timelineLineColor","map","item","dateText","dateInnerStyle","background","accentColor","style","bodyContainerStyle","color","subtitle","workType","workDescription","point","components","p","_c","propTypes","string","isRequired","$RefreshReg$"],"sources":["C:/Users/Dell/OneDrive/Bureau/elby-portfolio/src/components/Experience.jsx"],"sourcesContent":["import React, { useEffect, useState, useContext } from 'react';\nimport { Timeline, TimelineItem } from 'vertical-timeline-component-for-react';\nimport { Container } from 'react-bootstrap';\nimport ReactMarkdown from 'react-markdown';\nimport PropTypes from 'prop-types';\nimport { ThemeContext } from 'styled-components';\nimport Fade from 'react-reveal';\nimport Header from './Header';\nimport endpoints from '../constants/endpoints';\nimport FallbackSpinner from './FallbackSpinner';\nimport '../css/experience.css';\n\nconst styles = {\n  ulStyle: {\n    listStylePosition: 'outside',\n    paddingLeft: 20,\n  },\n  subtitleContainerStyle: {\n    marginTop: 10,\n    marginBottom: 10,\n  },\n  subtitleStyle: {\n    display: 'inline-block',\n  },\n  inlineChild: {\n    display: 'inline-block',\n  },\n  itemStyle: {\n    marginBottom: 10,\n  },\n};\n\nfunction Experience(props) {\n  const newLocal = useContext(ThemeContext);\n  const theme = newLocal;\n  const { header } = props;\n  const [data, setData] = useState(null);\n\n  useEffect(() => {\n    fetch(endpoints.experiences, {\n      method: 'GET',\n    })\n      .then((res) => res.json())\n      .then((res) => setData(res.experiences))\n      .catch((err) => err);\n  }, []);\n\n  return (\n    <>\n      <Header title={header} />\n\n      {data\n        ? (\n          <div className=\"section-content-container\">\n            <Container>\n              <Timeline\n                lineColor={theme.timelineLineColor}\n              >\n                {data.map((item) => (\n                  <Fade>\n                    <TimelineItem\n                      key={item.title + item.dateText}\n                      dateText={item.dateText}\n                      dateInnerStyle={{ background: theme.accentColor }}\n                      style={styles.itemStyle}\n                      bodyContainerStyle={{ color: theme.color }}\n                    >\n                      <h2 className=\"item-title\">\n                        {item.title}\n                      </h2>\n                      <div style={styles.subtitleContainerStyle}>\n                        <h4 style={{ ...styles.subtitleStyle, color: theme.accentColor }}>\n                          {item.subtitle}\n                        </h4>\n                        {item.workType && (\n                        <h5 style={styles.inlineChild}>\n                    &nbsp;Â·\n                          {' '}\n                          {item.workType}\n                        </h5>\n                        )}\n                      </div>\n                      <ul style={styles.ulStyle}>\n                        {item.workDescription.map((point) => (\n                          <div key={point}>\n                            <li>\n                              <ReactMarkdown\n                                children={point}\n                                components={{\n                                  p: 'span',\n                                }}\n                              />\n                            </li>\n                            <br />\n                          </div>\n                        ))}\n                      </ul>\n                    </TimelineItem>\n                  </Fade>\n                ))}\n              </Timeline>\n            </Container>\n          </div>\n        ) : <FallbackSpinner /> }\n    </>\n  );\n}\n\nExperience.propTypes = {\n  header: PropTypes.string.isRequired,\n};\n\nexport default Experience;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}